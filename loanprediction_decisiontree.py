# -*- coding: utf-8 -*-
"""LoanPrediction_DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bV8ZOw_sNcNBiiXz9d3pSHk08z_cOQyx
"""

import pandas as pd
import numpy as np
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

X, y = make_classification(n_samples=200, n_features=5, n_informative=3,
                           n_redundant=0, random_state=42)

df = pd.DataFrame(X, columns=['Age', 'Income', 'LoanAmount', 'CreditHistory', 'Education'])
df['Defaulted'] = y

df['Age'] = np.clip((df['Age'] * 10 + 35).astype(int), 18, 70)
df['Income'] = np.clip((df['Income'] * 10000 + 50000).astype(int), 20000, 150000)
df['LoanAmount'] = np.clip((df['LoanAmount'] * 5000 + 15000).astype(int), 5000, 50000)
df['CreditHistory'] = (df['CreditHistory'] > 0).astype(int)
df['Education'] = (df['Education'] > 0).astype(int)

print(df.head())
print("\nClass Distribution:\n", df['Defaulted'].value_counts())

X = df.drop('Defaulted', axis=1)
y = df['Defaulted']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = DecisionTreeClassifier(max_depth=4, criterion='gini', random_state=42)
model.fit(X_train, y_train)

plt.figure(figsize=(15, 8))
plot_tree(model, feature_names=X.columns, class_names=["No Default", "Default"], filled=True)
plt.title("Decision Tree for Loan Default Prediction")
plt.show()

y_pred = model.predict(X_test)
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

importances = model.feature_importances_
sns.barplot(x=importances, y=X.columns)
plt.title("Feature Importance")
plt.show()

